Alter table bpm
modify notes VARCHAR (2000);

Alter table action
rename to todo;

CREATE TABLE PM_Survey
(
  Date DATE NOT NULL,
  Rotation_Number INT NOT NULL,
  Department VARCHAR(25) NOT NULL,
  Question_1 INT NOT NULL,
  Question_2 INT NOT NULL,
  Question_3 INT NOT NULL,
  Current_Work VARCHAR(1000) NOT NULL,
  PRIMARY KEY (Date)
);

CREATE TABLE Rotation_Preference
(
  Name_1 VARCHAR(100) NOT NULL,
  Name_2 VARCHAR(100) NOT NULL,
  Name_3 VARCHAR(100) NOT NULL,
  Notes VARCHAR(2000) NOT NULL,
  Reasoning VARCHAR(4000) NOT NULL,
  PRIMARY KEY (Name_1)
);

CREATE TABLE AL_Survey
(
  Date DATE NOT NULL,
  PM_Name VARCHAR(50) NOT NULL,
  Department VARCHAR(25) NOT NULL,
  Current_Work VARCHAR(1000) NOT NULL,
  Question_1 INT NOT NULL,
  Question_2 INT NOT NULL,
  Question_3 INT NOT NULL,
  PRIMARY KEY (Date)
);

CREATE TABLE Action
(
  Action_Name VARCHAR(100) NOT NULL,
  Action_Status VARCHAR(15) NOT NULL,
  Intended_For VARCHAR(25) NOT NULL,
  Deadline DATE NOT NULL,
  PRIMARY KEY (Action_Name)
);

CREATE TABLE BPM
(
  BPM_FName VARCHAR(25) NOT NULL,
  BPM_LName VARCHAR(25) NOT NULL,
  BPM_SSO INT (9) NOT NULL,
  Track VARCHAR(25) NOT NULL,
  Title VARCHAR(25) NOT NULL,
  Notes VARCHAR(4000) NOT NULL,
  BPM_Password VARCHAR(15) NOT NULL,
  Email VARCHAR(25) NOT NULL,
  Action_Name VARCHAR(100) NOT NULL,
  PRIMARY KEY (BPM_SSO),
  FOREIGN KEY (Action_Name) REFERENCES Action(Action_Name)
);

CREATE TABLE AL
(
  AL_LName VARCHAR(25) NOT NULL,
  AL_FName VARCHAR(25) NOT NULL,
  AL_SSO INT (9) NOT NULL,
  Title VARCHAR(25) NOT NULL,
  Track VARCHAR(25) NOT NULL,
  AL_Password VARCHAR(15) NOT NULL,
  Email VARCHAR(25) NOT NULL,
  Action_Name VARCHAR(100) NOT NULL,
  PRIMARY KEY (AL_SSO),
  FOREIGN KEY (Action_Name) REFERENCES Action(Action_Name)
);

CREATE TABLE Rotation
(
  Name VARCHAR(100) NOT NULL,
  Description VARCHAR(4000) NOT NULL,
  Location VARCHAR(20) NOT NULL,
  RID INT NOT NULL,
  Start_Date DATE NOT NULL,
  End_Date DATE NOT NULL,
  Updates VARCHAR(4000) NOT NULL,
  Department VARCHAR(25) NOT NULL,
  PM_Feedback VARCHAR(4000),
  AL_Feedback VARCHAR(4000),
  Status VARCHAR(15) NOT NULL,
  AL_SSO INT NOT NULL,
  PRIMARY KEY (RID),
  FOREIGN KEY (AL_SSO) REFERENCES AL(AL_SSO)
);

CREATE TABLE Rotation_Submission
(
  Name VARCHAR(100) NOT NULL,
  Location VARCHAR(20) NOT NULL,
  RID INT NOT NULL,
  Department VARCHAR(25) NOT NULL,
  Past_Experience VARCHAR(3) NOT NULL,
  Mentor_Name VARCHAR(50) NOT NULL,
  Coleader VARCHAR(3) NOT NULL,
  Outcomes VARCHAR(4000) NOT NULL,
  Approval_Status VARCHAR(15) NOT NULL,
  Travel_Amount VARCHAR(15) NOT NULL,
  Sub_Functional_Areas VARCHAR(2000) NOT NULL,
  Description VARCHAR(2000) NOT NULL,
  Additional_Learning VARCHAR(2000) NOT NULL,
  Functional_Capabilities VARCHAR(2000) NOT NULL,
  AL_SSO INT NOT NULL,
  BPM_SSO INT,
  PRIMARY KEY (RID),
  FOREIGN KEY (AL_SSO) REFERENCES AL(AL_SSO),
  FOREIGN KEY (BPM_SSO) REFERENCES BPM(BPM_SSO)
);

CREATE TABLE Fulfills
(
  Date DATE NOT NULL,
  AL_SSO INT NOT NULL,
  PRIMARY KEY (Date, AL_SSO),
  FOREIGN KEY (Date) REFERENCES AL_Survey(Date),
  FOREIGN KEY (AL_SSO) REFERENCES AL(AL_SSO)
);

CREATE TABLE Program_Member
(
  PM_FName VARCHAR(25) NOT NULL,
  PM_LName VARCHAR(25) NOT NULL,
  PM_SSO INT (9) NOT NULL,
  University VARCHAR(50) NOT NULL,
  Hire_Date DATE NOT NULL,
  Major VARCHAR(50) NOT NULL,
  Track VARCHAR(25) NOT NULL,
  PM_Password VARCHAR(15) NOT NULL,
  Rotation_1 VARCHAR(15) NOT NULL,
  Rotation_2 VARCHAR(15) NOT NULL,
  Rotation_3 VARCHAR(15) NOT NULL,
  Rotation_4 VARCHAR(15) NOT NULL,
  Email VARCHAR(25) NOT NULL,
  BPM_SSO INT NOT NULL,
  Action_Name VARCHAR(100) NOT NULL,
  PRIMARY KEY (PM_SSO),
  FOREIGN KEY (BPM_SSO) REFERENCES BPM(BPM_SSO),
  FOREIGN KEY (Action_Name) REFERENCES Action(Action_Name)
);

CREATE TABLE Completes
(
  PM_SSO INT NOT NULL,
  Date DATE NOT NULL,
  PRIMARY KEY (PM_SSO, Date),
  FOREIGN KEY (PM_SSO) REFERENCES Program_Member(PM_SSO),
  FOREIGN KEY (Date) REFERENCES PM_Survey(Date)
);

CREATE TABLE Submits
(
  PM_SSO INT NOT NULL,
  Name_1 VARCHAR(100) NOT NULL,
  PRIMARY KEY (PM_SSO, Name_1),
  FOREIGN KEY (PM_SSO) REFERENCES Program_Member(PM_SSO),
  FOREIGN KEY (Name_1) REFERENCES Rotation_Preference(Name_1)
);

CREATE TABLE Assigned_To
(
  Rotation_Number INT NOT NULL,
  PM_SSO INT NOT NULL,
  RID INT NOT NULL,
  PRIMARY KEY (PM_SSO, RID),
  FOREIGN KEY (PM_SSO) REFERENCES Program_Member(PM_SSO),
  FOREIGN KEY (RID) REFERENCES Rotation(RID)
);

CREATE TABLE ToDo
(
  Item_Name VARCHAR(100) NOT NULL,
  Item_Status VARCHAR(15) NOT NULL,
  PM_SSO INT NOT NULL,
  BPM_SSO INT NOT NULL,
  AL_SSO INT NOT NULL,
  PRIMARY KEY (Item_Name),
  FOREIGN KEY (PM_SSO) REFERENCES Program_Member(PM_SSO),
  FOREIGN KEY (BPM_SSO) REFERENCES BPM(BPM_SSO),
  FOREIGN KEY (AL_SSO) REFERENCES AL(AL_SSO)
);